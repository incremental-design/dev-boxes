(()=>{"use strict";var e={n:n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},d:(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n)};const n=require("api-spec-converter");var t=e.n(n);const r=require("@apidevtools/swagger-parser");var o=e.n(r);const a=require("tmp-promise"),i=require("fs");var c=e.n(i);const s=require("util");var l=e.n(s);!function(){var e,n,r,i;e=this,n=void 0,i=function(){var e,n,r,i,s,u,p,f,y,h;return function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}(this,(function(v){switch(v.label){case 0:return v.trys.push([0,4,,5]),e={from:"openapi_3",to:"swagger_2",source:"https://api-engineering.nyc3.digitaloceanspaces.com/spec-ci/DigitalOcean-public.v2.yaml"},[4,t().convert(e)];case 1:return n=v.sent(),r=n.stringify({syntax:"json",order:"openapi"}),console.log(r),[4,(0,a.file)()];case 2:return i=v.sent(),s=i.path,u=i.cleanup,c().writeFileSync(s,r),[4,o().dereference(s)];case 3:return p=v.sent(),console.log(l().inspect(p,!1,null,!0)),u(),f=JSON.stringify(p),y=new Date,h=y.toISOString().split("T")[0],c().writeFile("digitalOceanAPI-"+h+".json",f,"utf8",(function(e){console.log(e)})),[3,5];case 4:throw v.sent();case 5:return[2]}}))},new((r=void 0)||(r=Promise))((function(t,o){function a(e){try{s(i.next(e))}catch(e){o(e)}}function c(e){try{s(i.throw(e))}catch(e){o(e)}}function s(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(a,c)}s((i=i.apply(e,n||[])).next())}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYXBpLXNwZWMtY29udmVydGVyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiQGFwaWRldnRvb2xzL3N3YWdnZXItcGFyc2VyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwidG1wLXByb21pc2VcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJmc1wiIiwid2VicGFjazovLy9leHRlcm5hbCBcInV0aWxcIiIsIndlYnBhY2s6Ly8vLi9pbmRleC50cyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInJlcXVpcmUiLCJkaWdpdGFsT2NlYW5BUEkiLCJmcm9tIiwidG8iLCJzb3VyY2UiLCJjb252ZXJ0IiwiY29udmVydGVkQVBJIiwiY29udmVydGVkQVBJSlNPTiIsInN0cmluZ2lmeSIsInN5bnRheCIsIm9yZGVyIiwiY29uc29sZSIsImxvZyIsImZpbGUiLCJwYXRoIiwiY2xlYW51cCIsImRlcmVmZXJlbmNlZEFQSSIsImRlcmVmZXJlbmNlZEFQSUpTT04iLCJKU09OIiwiZGF0ZSIsIkRhdGUiLCJ0b2RheSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJlcnJvciIsImdlbmVyYXRlQVBJIl0sIm1hcHBpbmdzIjoibUJBQ0EsSUFBSUEsRUFBc0IsQ0NBMUIsRUFBeUJDLElBQ3hCLElBQUlDLEVBQVNELEdBQVVBLEVBQU9FLFdBQzdCLElBQU1GLEVBQWdCLFFBQ3RCLElBQU1BLEVBRVAsT0FEQUQsRUFBb0JJLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLEdDTFIsRUFBd0IsQ0FBQ0ksRUFBU0MsS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYUCxFQUFvQlMsRUFBRUYsRUFBWUMsS0FBU1IsRUFBb0JTLEVBQUVILEVBQVNFLElBQzVFRSxPQUFPQyxlQUFlTCxFQUFTRSxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0UsRUFBd0IsQ0FBQ00sRUFBS0MsSUFBU0wsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsSUNBakYsTUFBTSxFQUErQkksUUFBUSxzQixhQ0E3QyxNQUFNLEVBQStCQSxRQUFRLCtCLGFDQTdDLE1BQU0sRUFBK0JBLFFBQVEsZUNBdkMsRUFBK0JBLFFBQVEsTSxhQ0E3QyxNQUFNLEVBQStCQSxRQUFRLFEsY0NTekIsVyxzcENBb0NVLE8sc0JBTnBCQyxFQUFrQixDQUN0QkMsS0FBTSxZQUNOQyxHQUFJLFlBQ0pDLE9BbkNKLDJGQXNDNEIsR0FBTSxJQUFBQyxRQUFrQkosSSxPQVd4QixPQVhwQkssRUFBb0IsU0FJcEJDLEVBQW1CRCxFQUFhRSxVQUFVLENBQzlDQyxPQUFRLE9BQ1JDLE1BQU8sWUFHVEMsUUFBUUMsSUFBSUwsR0FFYyxJQUFNLElBQUFNLFMsT0FHUixPQUhsQixFQUFvQixTQUFsQkMsRUFBSSxPQUFFQyxFQUFPLFVBQ3JCLGtCQUFpQkQsRUFBTVAsR0FFQyxHQUFNLGdCQUEwQk8sSSxjQUFsREUsRUFBa0IsU0FFeEJMLFFBQVFDLElBQUksWUFBYUksR0FBaUIsRUFBTyxNQUFNLElBRXZERCxJQUVNRSxFQUFzQkMsS0FBS1YsVUFBVVEsR0FFckNHLEVBQU8sSUFBSUMsS0FDWEMsRUFBUUYsRUFBS0csY0FBY0MsTUFBTSxLQUFLLEdBRTVDLGNBQ0UsbUJBQXFCRixFQUFRLFFBQzdCSixFQUNBLFFBQ0EsU0FBQ08sR0FDQ2IsUUFBUUMsSUFBSVksTSxhQUloQixNLGtUQUlKQyxJIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IG1vZHVsZVsnZGVmYXVsdCddIDpcblx0XHQoKSA9PiBtb2R1bGU7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsImNvbnN0IF9fV0VCUEFDS19OQU1FU1BBQ0VfT0JKRUNUX18gPSByZXF1aXJlKFwiYXBpLXNwZWMtY29udmVydGVyXCIpOzsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0gcmVxdWlyZShcIkBhcGlkZXZ0b29scy9zd2FnZ2VyLXBhcnNlclwiKTs7IiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJ0bXAtcHJvbWlzZVwiKTs7IiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJmc1wiKTs7IiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJ1dGlsXCIpOzsiLCJpbXBvcnQgY29udmVydGVyIGZyb20gXCJhcGktc3BlYy1jb252ZXJ0ZXJcIjtcbmltcG9ydCBzd2FnZ2VyUGFyc2VyIGZyb20gXCJAYXBpZGV2dG9vbHMvc3dhZ2dlci1wYXJzZXJcIjtcbmltcG9ydCB7IGZpbGUgfSBmcm9tIFwidG1wLXByb21pc2VcIjtcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCB1dGlsIGZyb20gXCJ1dGlsXCI7XG5cbmNvbnN0IGFwaVNvdXJjZSA9XG4gIFwiaHR0cHM6Ly9hcGktZW5naW5lZXJpbmcubnljMy5kaWdpdGFsb2NlYW5zcGFjZXMuY29tL3NwZWMtY2kvRGlnaXRhbE9jZWFuLXB1YmxpYy52Mi55YW1sXCI7XG5cbmNvbnN0IGdlbmVyYXRlQVBJID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIC8vIGNvbnN0IGRlcmVmZXJlbmNlZEFQSSA9IGF3YWl0IHN3YWdnZXJQYXJzZXIuZGVyZWZlcmVuY2UoYXBpU291cmNlKTsgLy90aGlzIGRvZXMgbm90IHdvcmsgaW4gcGF3XG4gICAgLy8gY29uc3QgZGVyZWZlcmVuY2VkQVBJSlNPTiA9IEpTT04uc3RyaW5naWZ5KGRlcmVmZXJlbmNlZEFQSSk7XG4gICAgLy8gY29uc3QgeyBwYXRoLCBjbGVhbnVwIH0gPSBhd2FpdCBmaWxlKCk7XG4gICAgLy9cbiAgICAvLyBmcy53cml0ZUZpbGVTeW5jKHBhdGgsIGRlcmVmZXJlbmNlZEFQSUpTT04pOyAvL0ZJWE1FOiBzeW5jaHJvbm91c2x5IHdyaXRpbmcgYSBmaWxlIHNsb3dzIGRvd24gdGhlIHdob2xlIHByb2dyYW0uXG4gICAgLy9cbiAgICAvLyBjb25zdCBkaWdpdGFsT2NlYW5BUEkgPSB7XG4gICAgLy8gICBmcm9tOiBcIm9wZW5hcGlfM1wiLFxuICAgIC8vICAgdG86IFwic3dhZ2dlcl8yXCIsXG4gICAgLy8gICBzb3VyY2U6IHBhdGgsXG4gICAgLy8gfTtcbiAgICAvL1xuICAgIC8vIGNvbnN0IGNvbnZlcnRlZEFQSTogb2JqZWN0ID0gYXdhaXQgY29udmVydGVyLmNvbnZlcnQoZGlnaXRhbE9jZWFuQVBJKTtcbiAgICAvL1xuICAgIC8vIGNsZWFudXAoKTtcbiAgICAvL1xuICAgIC8vIGNvbnN0IGNvbnZlcnRlZEFQSUpTT04gPSBKU09OLnN0cmluZ2lmeShjb252ZXJ0ZWRBUEkpO1xuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIC8vIGNvbnN0IHRvZGF5ID0gZGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KFwiVFwiKVswXTtcbiAgICAvLyBmcy53cml0ZUZpbGUoXG4gICAgLy8gICBcImRpZ2l0YWxPY2VhbkFQSS1cIiArIHRvZGF5ICsgXCIuanNvblwiLFxuICAgIC8vICAgY29udmVydGVkQVBJSlNPTixcbiAgICAvLyAgIFwidXRmOFwiLFxuICAgIC8vICAgKGVycm9yKSA9PiB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAvLyAgIH1cbiAgICAvLyApO1xuXG4gICAgY29uc3QgZGlnaXRhbE9jZWFuQVBJID0ge1xuICAgICAgZnJvbTogXCJvcGVuYXBpXzNcIixcbiAgICAgIHRvOiBcInN3YWdnZXJfMlwiLFxuICAgICAgc291cmNlOiBhcGlTb3VyY2UsXG4gICAgfTtcblxuICAgIGNvbnN0IGNvbnZlcnRlZEFQSTogYW55ID0gYXdhaXQgY29udmVydGVyLmNvbnZlcnQoZGlnaXRhbE9jZWFuQVBJKTtcblxuICAgIC8vIGNvbnNvbGUubG9nKGNvbnZlcnRlZEFQSSk7XG5cbiAgICBjb25zdCBjb252ZXJ0ZWRBUElKU09OID0gY29udmVydGVkQVBJLnN0cmluZ2lmeSh7XG4gICAgICBzeW50YXg6IFwianNvblwiLFxuICAgICAgb3JkZXI6IFwib3BlbmFwaVwiLFxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coY29udmVydGVkQVBJSlNPTik7XG5cbiAgICBjb25zdCB7IHBhdGgsIGNsZWFudXAgfSA9IGF3YWl0IGZpbGUoKTtcbiAgICBmcy53cml0ZUZpbGVTeW5jKHBhdGgsIGNvbnZlcnRlZEFQSUpTT04pOyAvL0ZJWE1FOiBzeW5jaHJvbm91c2x5IHdyaXRpbmcgYSBmaWxlIHNsb3dzIGRvd24gdGhlIHdob2xlIHByb2dyYW0uXG5cbiAgICBjb25zdCBkZXJlZmVyZW5jZWRBUEkgPSBhd2FpdCBzd2FnZ2VyUGFyc2VyLmRlcmVmZXJlbmNlKHBhdGgpO1xuXG4gICAgY29uc29sZS5sb2codXRpbC5pbnNwZWN0KGRlcmVmZXJlbmNlZEFQSSwgZmFsc2UsIG51bGwsIHRydWUpKTtcblxuICAgIGNsZWFudXAoKTtcblxuICAgIGNvbnN0IGRlcmVmZXJlbmNlZEFQSUpTT04gPSBKU09OLnN0cmluZ2lmeShkZXJlZmVyZW5jZWRBUEkpO1xuXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgdG9kYXkgPSBkYXRlLnRvSVNPU3RyaW5nKCkuc3BsaXQoXCJUXCIpWzBdO1xuXG4gICAgZnMud3JpdGVGaWxlKFxuICAgICAgXCJkaWdpdGFsT2NlYW5BUEktXCIgKyB0b2RheSArIFwiLmpzb25cIixcbiAgICAgIGRlcmVmZXJlbmNlZEFQSUpTT04sXG4gICAgICBcInV0ZjhcIixcbiAgICAgIChlcnJvcikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICB9XG4gICAgKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuZ2VuZXJhdGVBUEkoKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=